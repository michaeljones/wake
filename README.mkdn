# Wake

Wake is a pipeline and workflow tool based on the pipelines used in the animation industry. It has a huge amount of potential; it just needs a little love and care.

## Language

Wake is written in Python as that is fast becoming the main scripting language of the computer animation and whilst it might not seem as funky as Ruby, it’s still pretty damned cool.

## Direction
The plan is for this project to grow slowly into a fully functional pipeline with support for the main animation packages like [Maya](http://usa.autodesk.com/adsk/servlet/index?siteID=123112&id=7635018) and [Houdini](http://www.sidefx.com). However, smoothly working pipelines are awesomely helpful ways of organising your work and there is no reason why Wake can't be applicable to other areas of life. 

Wake is designed in a modular way so additional tools can be built into the framework with little effort.

## Install
The project code can be built into Python eggs. The test suite includes a basic script for building the eggs and a script for making an install to /tmp and running through some commands. The scripts:

* test\_suite/setup\_clean.tcsh
* test\_suite/test\_commands.tcsh

should provide some idea of the basic install steps. Fortunately Python eggs make this pretty easy. The only dependency that isn’t build into the eggs is SQLite which is the database which is used in the default configuration. Wake uses SQLAlchemy and so can handle other databases through that. I run SQLite 3.4.2 which seems to work fine.

To download, build and test wake use the following commands.

> git clone git://github.com/michaeljones/wake.git
>
> cd wake/test_suite
>
> ./rebuild.tcsh
>
> ./test_commands.tcsh

### Dependencies

Wake currently uses the following modules:

* SQLAlchemy
* Werkzeug
* Mako

Additionally a database specific layer is required such as sqlite.


